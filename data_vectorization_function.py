# -*- coding: utf-8 -*-
"""Data_Vectorization_Function.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c7gkCe15CryA8mx61GOHkH9mEzAaj-gf
"""

#important necessary modules
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

"""# Vectorize Text Dataframe
This function takes a pandas dataframe with categorical text responses and turns them into numerical ones. The output variable, 45, representing the question "Do you currently have a mental health disorder?" was made binary because we are primarily interested in cases when the tech worker definitely answers yes to having a mental health issue. The disintction between No, Maybe, Possibly, and Don't Know is less important.
"""

def vectorizeDataframe(dataframe):
  """
  Input: pandas dataframe 
  This function vectorizes the text responses to each feature in the dataframe. The output variable, 45, representing the question "Do you currently have a mental health disorder?" was made binary. Some variables are binary and represented by 0s and 1s. Some variables are ordinal and represented by an appropriate range of numbers.
  Output: vectorized dataframe
  """

  #Convert column headers to string
  dataframe.columns = dataframe.columns.astype(str) 

  # Change all responses in the 'What country do you live in?' column to 0 if the value is 'United States', otherwise set it to 1
  dataframe['55'] = dataframe['55'].apply(lambda x: 0 if x == 'United States of America' else 1)

  # Change all responses in the 'What country do you work in?' column to 0 if the value is 'United States', otherwise set it to 1
  dataframe['57'] = dataframe['57'].apply(lambda x: 0 if x == 'United States of America' else 1)

  # Create a dictionary of dictionaries that maps string values to numeric values for each column
  mappingQuestion1 = {'FALSE':0, 'TRUE':1}
  mappingQuestion2 = {'5-Jan':0, '25-Jun':1, '26-100':2, '100-500': 3, '500-1000': 4, 'More than 1000': 5}
  mappingQuestion3 = {'FALSE':0, 'TRUE':1}
  mappingQuestion5 = {'I don\'t know':-1, 'Not eligible for coverage / N/A':-1, 'Not eligible for coverage / NA':-1, 'No':0, 'Yes': 1}
  mappingQuestion6 = {'I am not sure':-1, 'NaN':-1, 'No':0, 'Yes': 1}
  mappingQuestion7 = {'I don\'t know':-1, 'No':0, 'Yes': 1}
  mappingQuestion8 = {'I don\'t know':-1, 'No':0, 'Yes': 1}
  mappingQuestion9 = {'I don\'t know':-1, 'No':0, 'Yes': 1}
  mappingQuestion10 = {'I don\'t know':-1, 'Very easy':0, 'Somewhat easy': 1, 'Neither easy nor difficult': 3, 'Somewhat difficult': 4, 'Difficult': 5, 'Very difficult': 6}
  mappingQuestion13 = {'No':0, 'Maybe': 1, 'Yes': 2}
  mappingQuestion14 = {'No':0, 'Maybe': 1, 'Yes': 2}
  mappingQuestion25 = {'FALSE':0, 'TRUE':1}
  mappingQuestion26 = {'No, none did': 0, 'Some did': 1, 'Yes, they all did': 2, 'I don\'t know': -1}
  mappingQuestion27 = {'N/A (none offered)': 0, 'N/A (was not aware)' :0, 'N/A (not currently aware)': 0, 'No, I only became aware later': 1, 'I was aware of some': 2, 'Yes, I was aware of all of them': 3}
  mappingQuestion28 = {'None did': 0, 'Some did': 1, 'Yes, they all did': 2, 'I don\'t know': -1}
  mappingQuestion29 = {'None did': 0, 'Some did': 1, 'Yes, they all did': 2, 'I don\'t know': -1}
  mappingQuestion30 = {'No': 0, 'Sometimes': 1, 'Yes, always': 2, 'I don\'t know': -1}
  mappingQuestion33 = {'No, at none of my previous employers': 0, 'At some of my previous employers': 1, 'Some of my previous employers': 1, 'Yes, at all of my previous employers': 2, 'I don\'t know': -1}
  mappingQuestion34 = {'No, at none of my previous employers': 0, 'No, none of my previous supervisors': 0, 'Some of my previous employers': 1, 'Some of my previous supervisors': 1, 'Yes, at all of my previous employers': 2, 'Yes, all of my previous supervisors':2,  'I don\'t know': -1}
  mappingQuestion40 = {'Not open at all': 0, 'Somewhat not open': 2, 'Neutral': 5, 'Somewhat open' : 8, 'Very open' : 10, 'Not applicable to me (I do not have a mental illness)': -1}
  mappingQuestion41 = {'No': 0, 'Maybe/Not sure': 1, 'Yes, I observed': 2, 'Yes, I experienced' : 3, 'I don\'t know': -1}
  mappingQuestion43 = {'No': 0, 'Yes': 1, 'I don\'t know': -1}
  mappingQuestion44 = {'No': 0, 'Maybe': 1, 'Possibly':2, 'Yes' :3, 'I don\'t know': -1, 'Don\'t Know': -1}
  #output variable was made binary because we are primarily interested in cases when the tech worker definitely answers yes to having a mental health issue. The disintction between No, Maybe, Possibly, and Don't Know is less important.
  mappingQuestion45 = {'No':0, 'Maybe':0, 'Possibly':0, 'Yes':1, 'Don\'t Know': 0} 
  mappingQuestion50 = {'FALSE':0, 'TRUE':1}
  mappingQuestion51 = {'Never':0, 'Rarely':1, 'Sometimes':2, 'Often': 3, 'Not applicable to me': -1}
  mappingQuestion52 = {'Never':0, 'Rarely':1, 'Sometimes':2, 'Often': 3, 'Not applicable to me': -1}
  #feature 53 asks about age, a continuous variable that doesn't have to be converted to numerical values
  mappingQuestion54 = {'female':0, 'male':1, 'other':-1}
  mappingQuestion61 = {'No':0, 'Maybe':1, 'Yes':2}
  mappingQuestion62 = {'No':0, 'Maybe':1, 'Yes':2}

  # Loop through each column and replace the string values with the corresponding numeric values using the maps
  for col in dataframe.columns:
    if col == '1':
      dataframe[col] = dataframe[col].map(mappingQuestion1)
    elif col == '2':
      dataframe[col] = dataframe[col].map(mappingQuestion2)
    elif col == '3':
      dataframe[col] = dataframe[col].map(mappingQuestion3)
    elif col == '5':
      dataframe[col] = dataframe[col].map(mappingQuestion5)
    elif col == '6':
      dataframe[col] = dataframe[col].map(mappingQuestion6)
    elif col == '7':
      dataframe[col] = dataframe[col].map(mappingQuestion7)
    elif col == '8':
      dataframe[col] = dataframe[col].map(mappingQuestion8)
    elif col == '9':
      dataframe[col] = dataframe[col].map(mappingQuestion9)
    elif col == '10':
      dataframe[col] = dataframe[col].map(mappingQuestion10)
    elif col == '13':
      dataframe[col] = dataframe[col].map(mappingQuestion13)
    elif col == '14':
      dataframe[col] = dataframe[col].map(mappingQuestion14)
    elif col == '25':
      dataframe[col] = dataframe[col].map(mappingQuestion25)
    elif col == '26':
      dataframe[col] = dataframe[col].map(mappingQuestion26)
    elif col == '27':
      dataframe[col] = dataframe[col].map(mappingQuestion27)
    elif col == '28':
      dataframe[col] = dataframe[col].map(mappingQuestion28)
    elif col == '29':
      dataframe[col] = dataframe[col].map(mappingQuestion29)
    elif col == '30':
      dataframe[col] = dataframe[col].map(mappingQuestion30)
    elif col == '33':
      dataframe[col] = dataframe[col].map(mappingQuestion33)
    elif col == '34':
      dataframe[col] = dataframe[col].map(mappingQuestion34)
    elif col == '61':
      dataframe[col] = dataframe[col].map(mappingQuestion61)
    elif col == '62':
      dataframe[col] = dataframe[col].map(mappingQuestion62)
    elif col == '40':
      dataframe[col] = dataframe[col].map(mappingQuestion40)
    elif col == '41':
      dataframe[col] = dataframe[col].map(mappingQuestion41)
    elif col == '43':
      dataframe[col] = dataframe[col].map(mappingQuestion43)
    elif col == '44':
      dataframe[col] = dataframe[col].map(mappingQuestion44)
    elif col == '45':
      dataframe[col] = dataframe[col].map(mappingQuestion45)
    elif col == '50':
      dataframe[col] = dataframe[col].map(mappingQuestion50)
    elif col == '51':
      dataframe[col] = dataframe[col].map(mappingQuestion51)
    elif col == '52':
      dataframe[col] = dataframe[col].map(mappingQuestion52)
    elif col == '54':
      dataframe[col] = dataframe[col].map(mappingQuestion54)

  #Drop any row than contains NaN value 
  dataframe = dataframe.dropna(how='any')

  #After all categorical text responses have been converted appropriately to a number, make all elements in vectorized dataframe a float value
  dataframe = dataframe.astype(float)

  return dataframe

# def vectorizeDataframe(dataframe):
#   """
#   Input: pandas dataframe 
#   This function vectorizes the text responses to each feature in the dataframe. The output variable, 45, representing the question "Do you currently have a mental health disorder?" was made binary. Some variables are binary and represented by 0s and 1s. Some variables are ordinal and represented by an appropriate range of numbers.
#   Output: vectorized dataframe
#   """

#   # Change all responses in the 'What country do you live in?' column to 1 if the value is 'United States', otherwise set it to 0
#   dataframe['55'] = dataframe['55'].apply(lambda x: 0 if x == 'United States of America' else 1)

#   # Change all responses in the 'What country do you work in?' column to 1 if the value is 'United States', otherwise set it to 0
#   dataframe['57'] = dataframe['57'].apply(lambda x: 0 if x == 'United States of America' else 1)

#   #Create a map of how we would like to vectorize data for each question 
#   mappingQuestion1 = {'FALSE':0, 'TRUE':1}
#   mappingQuestion2 = {'5-Jan':0, '25-Jun':1, '26-100':2, '100-500': 3, '500-1000': 4, 'More than 1000': 5}
#   mappingQuestion3 = {'FALSE':0, 'TRUE':1}
#   mappingQuestion5 = {'I don\'t know':-1, 'Not eligible for coverage / N/A':-1, 'Not eligible for coverage / NA':-1, 'No':0, 'Yes': 1}
#   mappingQuestion6 = {'I am not sure':-1, 'NaN':-1, 'No':0, 'Yes': 1}
#   mappingQuestion7 = {'I don\'t know':-1, 'No':0, 'Yes': 1}
#   mappingQuestion8 = {'I don\'t know':-1, 'No':0, 'Yes': 1}
#   mappingQuestion9 = {'I don\'t know':-1, 'No':0, 'Yes': 1}
#   mappingQuestion10 = {'I don\'t know':-1, 'Very easy':0, 'Somewhat easy': 1, 'Neither easy nor difficult': 3, 'Somewhat difficult': 4, 'Difficult': 5, 'Very difficult': 6}
#   mappingQuestion13 = {'No':0, 'Maybe': 1, 'Yes': 2}
#   mappingQuestion14 = {'No':0, 'Maybe': 1, 'Yes': 2}
#   mappingQuestion25 = {'FALSE':0, 'TRUE':1}
#   mappingQuestion26 = {'No, none did': 0, 'Some did': 1, 'Yes, they all did': 2, 'I don\'t know': -1}
#   mappingQuestion27 = {'N/A (none offered)': 0, 'N/A (was not aware)' :0, 'N/A (not currently aware)': 0, 'No, I only became aware later': 1, 'I was aware of some': 2, 'Yes, I was aware of all of them': 3}
#   mappingQuestion28 = {'None did': 0, 'Some did': 1, 'Yes, they all did': 2, 'I don\'t know': -1}
#   mappingQuestion29 = {'None did': 0, 'Some did': 1, 'Yes, they all did': 2, 'I don\'t know': -1}
#   mappingQuestion30 = {'No': 0, 'Sometimes': 1, 'Yes, always': 2, 'I don\'t know': -1}
#   mappingQuestion33 = {'No, at none of my previous employers': 0, 'At some of my previous employers': 1, 'Some of my previous employers': 1, 'Yes, at all of my previous employers': 2, 'I don\'t know': -1}
#   mappingQuestion34 = {'No, at none of my previous employers': 0, 'No, none of my previous supervisors': 0, 'Some of my previous employers': 1, 'Some of my previous supervisors': 1, 'Yes, at all of my previous employers': 2, 'Yes, all of my previous supervisors':2,  'I don\'t know': -1}
#   mappingQuestion40 = {'Not open at all': 0, 'Somewhat not open': 2, 'Neutral': 5, 'Somewhat open' : 8, 'Very open' : 10, 'Not applicable to me (I do not have a mental illness)': -1}
#   mappingQuestion41 = {'No': 0, 'Maybe/Not sure': 1, 'Yes, I observed': 2, 'Yes, I experienced' : 3, 'I don\'t know': -1}
#   mappingQuestion43 = {'No': 0, 'Yes': 1, 'I don\'t know': -1}
#   mappingQuestion44 = {'No': 0, 'Maybe': 1, 'Possibly':2, 'Yes' :3, 'I don\'t know': -1, 'Don\'t Know': -1}
#   #output variable was made binary because we are primarily interested in cases when the tech worker definitely answers yes to having a mental health issue. The disintction between No, Maybe, Possibly, and Don't Know is less important.
#   mappingQuestion45 = {'No':0, 'Maybe':0, 'Possibly':0, 'Yes':1, 'Don\'t Know': 0} 
#   mappingQuestion50 = {'FALSE':0, 'TRUE':1}
#   mappingQuestion51 = {'Never':0, 'Rarely':1, 'Sometimes':2, 'Often': 3, 'Not applicable to me': -1}
#   mappingQuestion52 = {'Never':0, 'Rarely':1, 'Sometimes':2, 'Often': 3, 'Not applicable to me': -1}
#   mappingQuestion53 = {}
#   mappingQuestion54 = {'female':0, 'male':1, 'other':-1}
#   mappingQuestion55 = {}
#   mappingQuestion57 = {}
#   mappingQuestion61 = {'No':0, 'Maybe':1, 'Yes':2}
#   mappingQuestion62 = {'No':0, 'Maybe':1, 'Yes':2}

#   listOfQuestionNumber = []
#   for column in dataframe.columns:
#     listOfQuestionNumber.append(column)

#   #Replace all the data with the conditional maps we created
#   for questionNumber in listOfQuestionNumber: 
#     stringValue = "mappingQuestion" + str(questionNumber)
#     dataframe[questionNumber] = dataframe[questionNumber].replace(globals()[stringValue])

#   #Replace all the data with the maps we created

#   #Drop any row than contains NaN value 
#   dataframe = dataframe.dropna(how='any')

#   #After all categorical text responses have been converted appropriately to a number, make all elements in vectorized dataframe a float value
#   dataframe = dataframe.astype(float)

#   return dataframe
